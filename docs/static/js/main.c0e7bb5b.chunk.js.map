{"version":3,"sources":["components/Formulario.jsx","components/LetraCancion.jsx","components/InfoArtista.jsx","App.js","serviceWorker.js","index.js"],"names":["Formulario","setBusquedaLetra","useState","artista","cancion","busqueda","setBusqueda","error","setError","actualizarState","e","target","name","value","className","onSubmit","preventDefault","trim","type","placeholder","onChange","LetraCancion","letra","length","InfoArtista","bioArtista","useEffect","document","getElementById","innerHTML","id","App","busquedaLetra","setLetra","setBioArtista","cargando","setCargando","Object","keys","a","urlArtista","urlCancion","Promise","all","axios","get","then","res","catch","response","console","log","data","status","headers","request","message","resArtista","resCancion","search","artists","bios","bio","lyrics","consultarApis","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c0e7bb5b.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst Formulario = ({setBusquedaLetra}) => {\n\tconst [busqueda, setBusqueda] = useState({\n\t\tartista: '',\n\t\tcancion: '',\n\t})\n\tconst [error, setError] = useState(false)\n\n\tconst { artista, cancion } = busqueda\n\n\tconst actualizarState = (e) => {\n\t\tsetBusqueda({\n\t\t\t...busqueda,\n\t\t\t[e.target.name]: e.target.value,\n\t\t})\n\t}\n\n\tconst buscar = (e) => {\n\t\te.preventDefault()\n\t\tif (artista.trim() === '' || cancion.trim() === '') {\n\t\t\tsetError(true)\n\t\t\treturn\n\t\t}\n\t\t// Todo bien\n    setError(false)\n    setBusquedaLetra(busqueda)\n\t}\n\n\treturn (\n\t\t<div className='bg-info'>\n\t\t\t<div className='container'>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<form\n\t\t\t\t\t\tonSubmit={buscar}\n\t\t\t\t\t\tclassName='col card text-white bg-transparent mb-5 pt-5 pb-2'\n\t\t\t\t\t>\n\t\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t\t<legend className='text-center'>\n\t\t\t\t\t\t\t\tBuscador en letras de canciones\n\t\t\t\t\t\t\t</legend>\n              <div className='row'>\n                {error ? (\n                  <div className='col-md-12'>\n                    <div className='alert alert-danger p-2 text-center'>\n                      <strong>Todos los campos son obligatorios!!</strong>\n                    </div>\n                  </div>\n                ) : null}\n\t\t\t\t\t\t\t\t<div className='col-md-6'>\n\t\t\t\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t\t\t\t<label>Artista</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\t\t\tname='artista'\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Nombre Artista'\n\t\t\t\t\t\t\t\t\t\t\tvalue={artista}\n\t\t\t\t\t\t\t\t\t\t\tonChange={actualizarState}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='col-md-6'>\n\t\t\t\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t\t\t\t<label>Canción</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\t\t\tname='cancion'\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Nombre Canción'\n\t\t\t\t\t\t\t\t\t\t\tvalue={cancion}\n\t\t\t\t\t\t\t\t\t\t\tonChange={actualizarState}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button type='submit' className='btn btn-primary float-right'>\n\t\t\t\t\t\t\t\tBuscar\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Formulario\n","import React, {Fragment} from 'react';\n\nconst LetraCancion = ({letra}) => {\n  if(letra.length === 0) return null;\n  return (\n    <Fragment>\n      <h3>Letra de canción</h3>\n      <hr />\n      <p className=\"letra\">{letra}</p>\n    </Fragment>\n  );\n};\n\nexport default LetraCancion;","import React, { Fragment, useEffect } from 'react'\n\nconst InfoArtista = ({ bioArtista }) => {\n  useEffect(() => {\n    document.getElementById('bio').innerHTML = bioArtista;\n  }, [bioArtista]);\n  \n\treturn (\n\t\t<Fragment>\n\t\t\t<h3>Biografía del artista.</h3>\n\t\t\t<hr />\n\t\t\t<p id='bio' className='letra'>\n\t\t\t</p>\n\t\t</Fragment>\n\t)\n}\n\nexport default InfoArtista\n","import React, { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\n\nimport Formulario from './components/Formulario'\nimport LetraCancion from './components/LetraCancion'\nimport InfoArtista from './components/InfoArtista'\n\nfunction App() {\n\tconst [busquedaLetra, setBusquedaLetra] = useState({})\n\tconst [letra, setLetra] = useState('')\n  const [bioArtista, setBioArtista] = useState('')\n  const [cargando, setCargando] = useState(false)\n\n\tconst { artista, cancion } = busquedaLetra\n\n\tuseEffect(() => {\n\t\tif (Object.keys(busquedaLetra).length === 0) return\n\n    const consultarApis = async () => {\n      setCargando(true);\n\t\t\tconst keyNapster = 'Mjg0MzA1NDktNzI3OC00YjQ3LWFkNzEtMzdhOWE0YjQ0YTIw'\n\t\t\tconst urlArtista = `http://api.napster.com/v2.2/search?apikey=${keyNapster}&query=${artista}&type=artist`\n\t\t\tconst urlCancion = `https://api.lyrics.ovh/v1/${artista}/${cancion}`\n\n\t\t\tconst [resArtista, resCancion] = await Promise.all([\n\t\t\t\taxios\n\t\t\t\t\t.get(urlArtista)\n\t\t\t\t\t.then((res) => res)\n          .catch((error) => {\n\t\t\t\t\t\tif (error.response) {\n\t\t\t\t\t\t\t// Request made and server responded\n\t\t\t\t\t\t\tconsole.log(error.response.data)\n\t\t\t\t\t\t\tconsole.log(error.response.status)\n              console.log(error.response.headers)\n              return error.response;\n\t\t\t\t\t\t} else if (error.request) {\n\t\t\t\t\t\t\t// The request was made but no response was received\n\t\t\t\t\t\t\tconsole.log(error.request)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Something happened in setting up the request that triggered an Error\n\t\t\t\t\t\t\tconsole.log('Error', error.message)\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\taxios\n\t\t\t\t\t.get(urlCancion)\n\t\t\t\t\t.then((res) => res)\n          .catch((error) => {\n\t\t\t\t\t\tif (error.response) {\n              return error.response;\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t])\n\t\t\tconsole.log('Artista', resArtista)\n\t\t\tconsole.log('Cancion', resCancion)\n\t\t\tif (\n\t\t\t\tresArtista.status !== 404 &&\n\t\t\t\tresCancion.status !== 404\n\t\t\t) {\n\t\t\t\tsetBioArtista(resArtista.data.search.data.artists[0].bios[0].bio)\n\t\t\t\tsetLetra(resCancion.data.lyrics)\n\t\t\t} else {\n\t\t\t\tsetBioArtista('No encontrado')\n\t\t\t\tsetLetra('No encontrado')\n      }\n      setCargando(false);\n\t\t}\n\t\tconsultarApis()\n\t}, [busquedaLetra])\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Formulario setBusquedaLetra={setBusquedaLetra} />\n\t\t\t<div className='container mt-4'>\n        <div className='row'>\n          {cargando ? (\n            <div className=\"col-md-6 offset-md-3 text-center\">Cargando...</div>\n          ) : (\n            <Fragment>\n              <div className='col-md-6 my-3'>\n                {bioArtista ? <InfoArtista bioArtista={bioArtista} /> : null}\n              </div>\n              <div className='col-md-6 my-3'>\n                <LetraCancion letra={letra} />\n              </div>\n            </Fragment>\n          )}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}